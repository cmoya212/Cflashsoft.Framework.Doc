<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cflashsoft.Framework.Optimization</name>
    </assembly>
    <members>
        <member name="T:Cflashsoft.Framework.Optimization.HybridCacheBase">
            <summary>
            Represents an abstract hybrid cache that uses the in-process .NET MemoryCache and a remote cache in an L1 and L2 cache fashion.
            </summary>
            <remarks>A Redis implementation of this hybrid cache exists. Contact RiverFront Solutions for info.</remarks>
        </member>
        <member name="P:Cflashsoft.Framework.Optimization.HybridCacheBase.Name">
            <summary>
            Gets the name of the cache.
            </summary>
        </member>
        <member name="P:Cflashsoft.Framework.Optimization.HybridCacheBase.DefaultUseMemoryCache">
            <summary>
            Returns true if the the hybrid cache will store an item in the MemoryCache by default.
            </summary>
        </member>
        <member name="P:Cflashsoft.Framework.Optimization.HybridCacheBase.DefaultUseRemoteCache">
            <summary>
            Returns true if the the hybrid cache will store an item in the remote cache by default.
            </summary>
        </member>
        <member name="P:Cflashsoft.Framework.Optimization.HybridCacheBase.DefaultMemoryItemExpirationSeconds">
            <summary>
            Returns the number of seconds before an item is evicted from the MemoryCache.
            </summary>
        </member>
        <member name="P:Cflashsoft.Framework.Optimization.HybridCacheBase.DefaultRemoteExpirationSeconds">
            <summary>
            Returns the number of seconds before an item is evicted from the remote cache.
            </summary>
        </member>
        <member name="P:Cflashsoft.Framework.Optimization.HybridCacheBase.DefaultMonitorRemoteItems">
            <summary>
            Returns true if the MemoryCache monitors for changes in the remote cache.
            </summary>
        </member>
        <member name="P:Cflashsoft.Framework.Optimization.HybridCacheBase.MemoryCache">
            <summary>
            Returns the underlying MemoryCache instance.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.#ctor(System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the HybridCache class.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.#ctor(System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the HybridCache class.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.Get``1(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns an entry from the cache.
            </summary>
            <param name="key">The unique key of the item in the cache.</param>
            <param name="useMemoryCache">Use MemoryCache. Leave null to use default value set by the cache instance.</param>
            <param name="useRemoteCache">Use remote cache. Leave null to use default value set by the cache instance.</param>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetAsync``1(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Returns an item from the cache.
            </summary>
            <param name="key">The unique key of the item in the cache.</param>
            <param name="useMemoryCache">Use MemoryCache. Leave null to use default value set by the cache instance.</param>
            <param name="useRemoteCache">Use remote cache. Leave null to use default value set by the cache instance.</param>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.Set``1(System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Inserts an item into the cache.
            </summary>
            <param name="key">The unique key of the item in the cache.</param>
            <param name="useMemoryCache">Use MemoryCache. Leave null to use default value set by the cache instance.</param>
            <param name="useRemoteCache">Use remote cache. Leave null to use default value set by the cache instance.</param>
            <param name="value">The value to set in the cache.</param>
            <param name="memoryItemExpirationSeconds">Amount of time before the item is evicted from the MemoryCache. Leave null to use default value set by the cache instance.</param>
            <param name="remoteItemExpirationSeconds">Amount of time before the item is evicted from the remote cache. Leave null to use default value set by the cache instance.</param>
            <param name="monitorRemoteItem">True if the remote cache will be monitored and items evicted from the MemoryCache on changes. Leave null to use default value set by the cache instance.</param>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.SetAsync``1(System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Inserts an item into the cache.
            </summary>
            <param name="key">The unique key of the item in the cache.</param>
            <param name="useMemoryCache">Use MemoryCache. Leave null to use default value set by the cache instance.</param>
            <param name="useRemoteCache">Use remote cache. Leave null to use default value set by the cache instance.</param>
            <param name="value">The value to set in the cache.</param>
            <param name="memoryItemExpirationSeconds">Amount of time before the item is evicted from the MemoryCache. Leave null to use default value set by the cache instance.</param>
            <param name="remoteItemExpirationSeconds">Amount of time before the item is evicted from the remote cache. Leave null to use default value set by the cache instance.</param>
            <param name="monitorRemoteItem">True if the remote cache will be monitored and items evicted from the MemoryCache on changes. Leave null to use default value set by the cache instance.</param>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetOrSet``1(System.String,System.Func{``0},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Return an item from the cache or insert using the specified function.
            </summary>
            <param name="key">The unique key of the item in the cache.</param>
            <param name="useMemoryCache">Use MemoryCache. Leave null to use default value set by the cache instance.</param>
            <param name="useRemoteCache">Use remote cache. Leave null to use default value set by the cache instance.</param>
            <param name="memoryItemExpirationSeconds">Amount of time before the item is evicted from the MemoryCache. Leave null to use default value set by the cache instance.</param>
            <param name="remoteItemExpirationSeconds">Amount of time before the item is evicted from the remote cache. Leave null to use default value set by the cache instance.</param>
            <param name="monitorRemoteItem">True if the remote cache will be monitored and items evicted from the MemoryCache on changes. Leave null to use default value set by the cache instance.</param>
            <param name="getValue">The function that will return an item from the remote store such as a database if the item is not found.</param>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetOrSetAsync``1(System.String,System.Func{System.Threading.Tasks.Task{``0}},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Return an item from the cache or insert using the specified function.
            </summary>
            <param name="key">The unique key of the item in the cache.</param>
            <param name="useMemoryCache">Use MemoryCache. Leave null to use default value set by the cache instance.</param>
            <param name="useRemoteCache">Use remote cache. Leave null to use default value set by the cache instance.</param>
            <param name="memoryItemExpirationSeconds">Amount of time before the item is evicted from the MemoryCache. Leave null to use default value set by the cache instance.</param>
            <param name="remoteItemExpirationSeconds">Amount of time before the item is evicted from the remote cache. Leave null to use default value set by the cache instance.</param>
            <param name="monitorRemoteItem">True if the remote cache will be monitored and items evicted from the MemoryCache on changes. Leave null to use default value set by the cache instance.</param>
            <param name="getValue">The function that will return an item from the remote store such as a database if the item is not found.</param>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.Remove(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Remove an item from the cache.
            </summary>
            <param name="key">The unique key of the item in the cache.</param>
            <param name="useMemoryCache">Use MemoryCache. Leave null to use default value set by the cache instance.</param>
            <param name="useRemoteCache">Use remote cache. Leave null to use default value set by the cache instance.</param>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.RemoveAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Remove an item from the cache.
            </summary>
            <param name="key">The unique key of the item in the cache.</param>
            <param name="useMemoryCache">Use MemoryCache. Leave null to use default value set by the cache instance.</param>
            <param name="useRemoteCache">Use remote cache. Leave null to use default value set by the cache instance.</param>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetFromMemoryCache``1(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get an item from the MemoryCache.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetFromMemoryCacheAsync``1(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get an item from the MemoryCache.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.SetInMemoryCache``1(System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Insert an item into the MemoryCache.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.SetInMemoryCacheAsync``1(System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Insert an item into the MemoryCache.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetOrSetUsingMemoryCache``1(System.String,System.Func{``0},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Return an item from the MemoryCache or insert it using the specified function.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetOrSetUsingMemoryCacheAsync``1(System.String,System.Func{System.Threading.Tasks.Task{``0}},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Return an item from the MemoryCache or insert it using the specified function.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.RemoveFromMemoryCache(System.String,System.Nullable{System.Boolean})">
            <summary>
            Remove an item from the MemoryCache.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.RemoveFromMemoryCacheAsync(System.String,System.Nullable{System.Boolean})">
            <summary>
            Remove an item from the MemoryCache.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetOrSetUsingRemoteCache``1(System.String,System.Func{``0},System.Nullable{System.Int32})">
            <summary>
            Return an item from the remote cache or insert using the specified function.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetOrSetUsingRemoteCacheAsync``1(System.String,System.Func{System.Threading.Tasks.Task{``0}},System.Nullable{System.Int32})">
            <summary>
            Return an item from the remote cache or insert using the specified function.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetDistributedLock(System.String)">
            <summary>
            Acquire a distributed lock.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetDistributedLockAsync(System.String)">
            <summary>
            Acquire a distributed lock.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetFromRemoteCache``1(System.String)">
            <summary>
            Get an item from the remote cache.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetFromRemoteCacheAsync``1(System.String)">
            <summary>
            Get an item from the remote cache.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.SetInRemoteCache``1(System.String,``0,System.Nullable{System.Int32})">
            <summary>
            Insert an item into the remote cache.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.SetInRemoteCacheAsync``1(System.String,``0,System.Nullable{System.Int32})">
            <summary>
            Insert an item into the remote cache.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.RemoveFromRemoteCache(System.String)">
            <summary>
            Remove an item from the remote cache.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.RemoveFromRemoteCacheAsync(System.String)">
            <summary>
            Remove an item from the remote cache.
            </summary>
        </member>
        <member name="P:Cflashsoft.Framework.Optimization.HybridCacheBase.CanMonitorRemoteItems">
            <summary>
            Returns true if items will be removed from the MemoryCache when they are no longer in the remote cache.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.GetRemoteItemChangeMonitor(System.String)">
            <summary>
            Returns a ChangeMonitor that monitors the remote cache for changes.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.HybridCacheBase.AssertHybridCacheParameters(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Throws an exception if the cache operation parameters do not contain expected values.
            </summary>
        </member>
        <member name="T:Cflashsoft.Framework.Optimization.MemoryCacheExtensions">
            <summary>
            Extension methods for the .NET MemoryCache class.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions.SyncedGetOrSet(System.Runtime.Caching.MemoryCache,System.String,System.Func{System.Object},System.Int32,System.String)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValue">Function to retrieve the value on failure such as from a database.</param>
            <param name="expirationSeconds">Seconds in the future that the cache item will expire.</param>
            <param name="regionName">The name of a region in a cache. The default is null.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions.SyncedGetOrSet(System.Runtime.Caching.MemoryCache,System.String,System.Func{System.Object},System.DateTimeOffset,System.String)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValue">Function to retrieve the value on failure such as from a database.</param>
            <param name="absoluteExpiration">DateTimeOffset in the future that the cache item will expire.</param>
            <param name="regionName">The name of a region in a cache. The default is null.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions.SyncedGetOrSet``1(System.Runtime.Caching.MemoryCache,System.String,System.Func{``0},System.Int32,System.String)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValue">Function to retrieve the value on failure such as from a database.</param>
            <param name="expirationSeconds">Seconds in the future that the cache item will expire.</param>
            <param name="regionName">The name of a region in a cache. The default is null.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions.SyncedGetOrSet``1(System.Runtime.Caching.MemoryCache,System.String,System.Func{``0},System.DateTimeOffset,System.String)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValue">Function to retrieve the value on failure such as from a database.</param>
            <param name="absoluteExpiration">DateTimeOffset in the future that the cache item will expire.</param>
            <param name="regionName">The name of a region in a cache. The default is null.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions.SyncedGetOrSetAsync(System.Runtime.Caching.MemoryCache,System.String,System.Func{System.Threading.Tasks.Task{System.Object}},System.Int32,System.String)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValueAsync">Function to retrieve the value on failure such as from a database.</param>
            <param name="expirationSeconds">Seconds in the future that the cache item will expire.</param>
            <param name="regionName">The name of a region in a cache. The default is null.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions.SyncedGetOrSetAsync(System.Runtime.Caching.MemoryCache,System.String,System.Func{System.Threading.Tasks.Task{System.Object}},System.DateTimeOffset,System.String)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValueAsync">Function to retrieve the value on failure such as from a database.</param>
            <param name="absoluteExpiration">DateTimeOffset in the future that the cache item will expire.</param>
            <param name="regionName">The name of a region in a cache. The default is null.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions.SyncedGetOrSetAsync``1(System.Runtime.Caching.MemoryCache,System.String,System.Func{System.Threading.Tasks.Task{``0}},System.Int32,System.String)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValueAsync">Function to retrieve the value on failure such as from a database.</param>
            <param name="expirationSeconds">Seconds in the future that the cache item will expire.</param>
            <param name="regionName">The name of a region in a cache. The default is null.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions.SyncedGetOrSetAsync``1(System.Runtime.Caching.MemoryCache,System.String,System.Func{System.Threading.Tasks.Task{``0}},System.DateTimeOffset,System.String)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValueAsync">Function to retrieve the value on failure such as from a database.</param>
            <param name="absoluteExpiration">DateTimeOffset in the future that the cache item will expire.</param>
            <param name="regionName">The name of a region in a cache. The default is null.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="T:Cflashsoft.Framework.Optimization.MemoryCacheExtensions2">
            <summary>
            Extension methods for the .NET IMemoryCache.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions2.SyncedGetOrSet(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.String,System.Func{System.Object},System.Int32)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValue">Function to retrieve the value on failure such as from a database.</param>
            <param name="expirationSeconds">Seconds in the future that the cache item will expire.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions2.SyncedGetOrSet(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.String,System.Func{System.Object},System.DateTimeOffset)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValue">Function to retrieve the value on failure such as from a database.</param>
            <param name="absoluteExpiration">DateTimeOffset in the future that the cache item will expire.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions2.SyncedGetOrSet``1(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.String,System.Func{``0},System.Int32)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValue">Function to retrieve the value on failure such as from a database.</param>
            <param name="expirationSeconds">Seconds in the future that the cache item will expire.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions2.SyncedGetOrSet``1(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.String,System.Func{``0},System.DateTimeOffset)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValue">Function to retrieve the value on failure such as from a database.</param>
            <param name="absoluteExpiration">DateTimeOffset in the future that the cache item will expire.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions2.SyncedGetOrSetAsync(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.String,System.Func{System.Threading.Tasks.Task{System.Object}},System.Int32)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValueAsync">Function to retrieve the value on failure such as from a database.</param>
            <param name="expirationSeconds">Seconds in the future that the cache item will expire.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions2.SyncedGetOrSetAsync(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.String,System.Func{System.Threading.Tasks.Task{System.Object}},System.DateTimeOffset)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValueAsync">Function to retrieve the value on failure such as from a database.</param>
            <param name="absoluteExpiration">DateTimeOffset in the future that the cache item will expire.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions2.SyncedGetOrSetAsync``1(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.String,System.Func{System.Threading.Tasks.Task{``0}},System.Int32)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValueAsync">Function to retrieve the value on failure such as from a database.</param>
            <param name="expirationSeconds">Seconds in the future that the cache item will expire.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.MemoryCacheExtensions2.SyncedGetOrSetAsync``1(Microsoft.Extensions.Caching.Memory.IMemoryCache,System.String,System.Func{System.Threading.Tasks.Task{``0}},System.DateTimeOffset)">
            <summary>
            Return an item from the memory cache or insert it using the provided function in a thread-safe manner.
            </summary>
            <param name="cache">The MemoryCache instance.</param>
            <param name="key">A unique identifier for the cache entry to get.</param>
            <param name="getValueAsync">Function to retrieve the value on failure such as from a database.</param>
            <param name="absoluteExpiration">DateTimeOffset in the future that the cache item will expire.</param>
            <param name="regionName">The name of a region in a cache. The default is null.</param>
            <returns>An object retrieved or set in the cache.</returns>
        </member>
        <member name="T:Cflashsoft.Framework.Optimization.NamedLockFactory">
            <summary>
            Factory for creating named objects for use with thread locks.
            </summary>
        </member>
        <member name="F:Cflashsoft.Framework.Optimization.NamedLockFactory.Default">
            <summary>
            Default factory for creating named objects for use with thread locks.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.NamedLockFactory.#ctor">
            <summary>
            Initializes a new instance of NamedLockFactory class.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.NamedLockFactory.Get(System.String)">
            <summary>
            Get a named lock object.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.NamedLockFactory.Remove(System.String)">
            <summary>
            Remove a named lock object.
            </summary>
        </member>
        <member name="T:Cflashsoft.Framework.Optimization.NamedSemaphoreSlimLockFactory">
            <summary>
            Factory for creating named semaphores for use with thread locks.
            </summary>
        </member>
        <member name="F:Cflashsoft.Framework.Optimization.NamedSemaphoreSlimLockFactory.Default">
            <summary>
            Default factory for creating named semaphores for use with thread locks.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.NamedSemaphoreSlimLockFactory.#ctor">
            <summary>
            Initializes a new instance of NamedSemaphoreSlimLockFactory class.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.NamedSemaphoreSlimLockFactory.Get(System.String,System.Int32,System.Int32)">
            <summary>
            Get a named semaphore.
            </summary>
        </member>
        <member name="M:Cflashsoft.Framework.Optimization.NamedSemaphoreSlimLockFactory.Remove(System.String)">
            <summary>
            Remove a named semaphore.
            </summary>
        </member>
    </members>
</doc>
